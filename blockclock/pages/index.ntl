<!doctype html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">

        <title>#title#</title>
        <meta name="description" content="We make you play!">
        <meta name="author" content="TheSpielplatz">

        <link rel="apple-touch-icon" sizes="180x180" href="/static/apple-touch-icon.png">
        <link rel="icon" type="image/png" sizes="32x32" href="/static/favicon-32x32.png">
        <link rel="icon" type="image/png" sizes="16x16" href="/static/favicon-16x16.png">
        <link rel="manifest" href="/static/site.webmanifest">

        <link href="static/lib/bulma/bulma.css" rel="stylesheet">
        <style>
            @font-face {
                font-family: 'Bebas Neue';
                src: url('/static/fonts/BebasNeue-Regular.ttf') format('truetype'); /* Chrome 4+, Firefox 3.5, Opera 10+, Safari 3â€”5 */
            }

            html {
                xoverflow-y: hidden;
                background: black;
                color: white;
            }

            body {
                background: rgb(33,37,41);
                letter-spacing: 0.5px;
                box-shadow: inset 0 0 5rem rgba(0, 0, 0, .5);
                color: #D0D0D0;
            }

            .cursor::after{
                content: "";
                width: 3px;
                height: 28px;

                margin-bottom: 2px;
                margin-left: 4px;

                background: #F7941E;
                -webkit-animation: blink 0.8s infinite;

            }

            @keyframes blink {
                0% { opacity: 0 }
                50% { opacity: 100% }
                100% { opacity: 0 }
            }

            .navbar {
                font-family: 'Bebas Neue', cursive;
                background: transparent;
            }

            .nav-title {
                font-family: 'Bebas Neue', cursive;
                font-size: 2rem;
                font-weight: bold;
                text-shadow: 0px 3px 0px #C56200;
            }

            .content h1 {
                color: white;
                font-family: 'Bebas Neue', cursive;
                font-size: 2rem;
                font-weight: normal;
                text-shadow: 0px 1px 0px #C56200;
            }

            .is-orange {
                background-color: #F7941E;
                border-color: transparent;
                color: #fff;
            }

            #text2display {
                font-family: "PT Mono";
            }
        </style>
    </head>

    <body>
        <nav class="navbar">
            <div class="navbar-brand">
                <p class="navbar-item nav-title is-4 cursor has-text-white">#title#</p>
            </div>
        </nav>

        <div class="content">
            <h1 class="title">Generel</h1>
            <button class="button" data-action="turnon" data-active="is-primary">On</button>
            <button class="button" data-action="turnoff" data-active="is-danger">Off</button>
            <button class="button" data-action="timemode-block">Show Blocktime</button>
            <button class="button" data-action="timemode-time">Show Time</button>
        </div>
        <div class="content">
            <h1 class="title">New Block Animation</h1>
            <button class="button" data-action="animation-off">Off</button>
            <button class="button" data-action="animation-rainbow">Rainbow</button>
            <button class="button" data-action="animation-moving-block">Moving Block</button>
        </div>
        <div class="content">
            <h1 class="title">Actions</h1>
            <button class="button" data-action="trigger-moving-block">Moving Block</button>
        </div>
        <div class="content">
            <h1 class="title">Text</h1>
            <div class="control">
                <input id="text2display" class="input" type="text" placeholder="Text to display">
            </div>
            <button class="button" data-action="trigger-send-text">Send Text</button>
        </div>
            <!-- Hero footer: will stick at the bottom -
            <div class="hero-foot">
                <nav class="level">
                    <div class="level-left">
                        <div class="level-item pl-2">
                            <figure class="image is-48x48">
                                <img width="70" height="40" src="static/img/tsp_70x112.png" alt="TheSpielplatz" scale="0">
                            </figure>
                        </div>
                    </div>
                    <div class="level-right pr-4">
                        <p class="level-item has-text-grey">Version: #version#</p>
                    </div>
                </nav>
            </div>
            -->
        </section>
    <script>
        function sendAction(action) {
            let myHeaders = new Headers();
            myHeaders.append("Content-Type", "application/json");

            let raw = JSON.stringify({
                "action": action,
                 "text2display": document.getElementById('text2display').value
            })

            if (action === 'trigger-send-text') document.getElementById('text2display').value = ''

            let requestOptions = {
                method: 'POST',
                headers: myHeaders,
                body: raw,
                redirect: 'follow'
            }

            fetch("/api/action/", requestOptions)
              .then(response => response.json())
              .then(processResult)
              .catch(error => console.log('error', error));
        }

        function processResult(result) {
            console.log(result)
            buttons.forEach((button) => {
                let activeClass = button.getAttribute('data-active') || 'is-orange'
                button.className = button.className.replace(activeClass, '').trim()
            })

            result.forEach((buttonData) => {
                let activeButtons = document.querySelectorAll(`[data-action=${buttonData}]`)
                activeButtons.forEach(button => {
                    let activeClass = button.getAttribute('data-active') || 'is-orange'
                    button.className += ' ' + activeClass
                })
            })
        }

        const buttons = document.querySelectorAll('[data-action]')
        buttons.forEach((button) => {
            const action = button.getAttribute('data-action')
            button.addEventListener('click', () => {
                sendAction(action)
            })
        })

        sendAction('init')
    </script>
    </body>
</html>

